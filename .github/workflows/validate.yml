# Github Actions workflow that uses SFDX to authenticate and run validations and deployments
name: validate
on:
  # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - dev
      - master

# NOTE: ENV vars can be declated globally here and shared among jobs/steps below
# See: https://github.com/actions/starter-workflows/blob/master/ci/google.yml
env:
  AUTH_FILE_KEY: ${{ secrets.AUTH_FILE_KEY }}

jobs:
  # TODO: Add workflow that creates release tag on successful merge into Master
  authenticate_to_prod:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      # Using v2 in this example ensures you're using a stable version of the checkout action.
      - name: Checkout
        uses: actions/checkout@v2

      # Check for existence of files or env vars
      - name: Check required items
        run: |
          if [ -z ${{ env.AUTH_FILE_KEY }} ]; then
            echo "Missing Auth File Key in Github secrets! Exiting!"
            exit 1
          else
            echo "All required files/keys present! Continuing..."
          fi

      # Run the sfdx-deploy action w/ conditional args by checking "github" context
      # NOTE: For list of props see: https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions
      # E.g. find branch/tag name: github.ref returns "refs/heads/my-branch-name"
      - name: Auth to QA org
        id: ci-validate-qa
        if: github.base_ref == 'dev'
        uses: ./.github/actions/sfdx-validate
        with:
          auth-file-key: ${{ secrets.AUTH_FILE_KEY }}
          target-alias: 'QA'

      - name: Auth to Prod org
        id: ci-validate-prod
        if: github.base_ref == 'master'
        uses: ./.github/actions/sfdx-validate
        # NOTE: To use remote action instead of local:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsuses
        with:
          # NOTE: Requires Auth file password to be entered into Github Secrets
          # See: help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
          auth-file-key: ${{ env.AUTH_FILE_KEY }}

      # TODO: On success, can run:
      # a) an action to push a new version tag? May need to take BOOL arg for whether to run
      # b) an action to ping slack channel?
      # c) shoot an email notification with links to subsequent forms that need be filled?
      # d) In case QA validate succeeded, we can deploy to QA sandbox?
      - name: Validate QA Success
        if: success() && github.base_ref == 'dev'
        uses: ./.github/actions/sfdx-deploy
        with:
          # TODO: Usually we will deploy to QA/Sandbox org on successful check-deploy
          # If provided, action will use specific job-id; Else, it will grab the prev deploy operation id
          auth-file-key: ${{ env.AUTH_FILE_KEY }}
          # target-alias: 'QA'
          # deploy-id: value-from-prev-step

      - name: Validate Prod Success
        if: success() && github.base_ref == 'master'
        # TODO: Assumes Prod deploy to be a manual operation; If not, we will want to trigger the action used in step above
        run: |
          echo "Authentication to Prod org succeeded! Ready to deploy! Remember to add a version tag for the new release!"

      # TODO: On fail, can run:
      # a) Slack notification flow?
      - name: Validate Fail
        if: failure()
        run: |
          echo "There was issue with the 'validate' action!"
